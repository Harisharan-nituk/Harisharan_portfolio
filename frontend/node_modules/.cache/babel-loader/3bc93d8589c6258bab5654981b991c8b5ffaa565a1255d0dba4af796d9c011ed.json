{"ast":null,"code":"var _jsxFileName = \"/Users/harisharan/Desktop/portfolio_py/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api'; // Your Axios instance\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider Component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token')); // Load token from localStorage\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true); // For checking initial auth status\n  const navigate = useNavigate();\n  console.log('[AuthContext] Initial state: token =', token, 'isLoadingAuth =', isLoadingAuth); // DEBUG\n\n  useEffect(() => {\n    const userString = localStorage.getItem('user');\n    if (token && userString) {\n      try {\n        setCurrentUser(JSON.parse(userString));\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      } catch (e) {\n        console.error(\"Error parsing stored user, clearing auth data:\", e);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setToken(null);\n        setCurrentUser(null);\n        delete api.defaults.headers.common['Authorization'];\n      }\n    } else {\n      // No token or no user, ensure Axios default is clear\n      delete api.defaults.headers.common['Authorization'];\n    }\n    setIsLoadingAuth(false);\n  }, [token]); // Re-run if token changes (e.g. on login/logout)\n\n  const login = async (email, password) => {\n    setIsLoadingAuth(true); // Indicate loading for login action\n    try {\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify({\n        _id: data._id,\n        name: data.name,\n        email: data.email,\n        isAdmin: data.isAdmin\n      }));\n      setToken(data.token); // This will trigger the useEffect above\n      setCurrentUser({\n        _id: data._id,\n        name: data.name,\n        email: data.email,\n        isAdmin: data.isAdmin\n      });\n      // No need to set Axios header here, useEffect handles it\n      setIsLoadingAuth(false);\n      return data; // Return data for potential further actions in LoginPage\n    } catch (error) {\n      setIsLoadingAuth(false);\n      console.error(\"Login failed in AuthContext:\", error.response || error);\n      throw error; // Re-throw error to be caught by LoginPage\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setToken(null); // This will trigger the useEffect to clear Axios header\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // No need to delete api.defaults.headers.common['Authorization'] here, useEffect handles it\n    navigate('/login'); // Navigate to login page after logout\n  };\n\n  // Example: Can be used if user profile info is updated elsewhere and needs to reflect in context\n  const updateUserInContext = updatedUserInfo => {\n    const fullUserInfo = {\n      ...currentUser,\n      ...updatedUserInfo\n    }; // Merge existing with new\n    localStorage.setItem('user', JSON.stringify(fullUserInfo));\n    setCurrentUser(fullUserInfo);\n  };\n  const value = {\n    currentUser,\n    token,\n    isLoadingAuth,\n    login,\n    logout,\n    updateUserInContext,\n    // Changed name to be more specific\n    isAdmin: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isAdmin) || false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"ZgX7dHlvGQIQlsKNwuxv27FXhPU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","token","setToken","localStorage","getItem","isLoadingAuth","setIsLoadingAuth","navigate","console","log","userString","JSON","parse","defaults","headers","common","e","error","removeItem","login","email","password","data","post","setItem","stringify","_id","name","isAdmin","response","logout","updateUserInContext","updatedUserInfo","fullUserInfo","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harisharan/Desktop/portfolio_py/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api'; // Your Axios instance\n\n// Create Context\nconst AuthContext = createContext(null);\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\n// AuthProvider Component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token')); // Load token from localStorage\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true); // For checking initial auth status\n  const navigate = useNavigate();\n  console.log('[AuthContext] Initial state: token =', token, 'isLoadingAuth =', isLoadingAuth); // DEBUG\n\n  useEffect(() => {\n    const userString = localStorage.getItem('user');\n    if (token && userString) {\n      try {\n        setCurrentUser(JSON.parse(userString));\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      } catch (e) {\n        console.error(\"Error parsing stored user, clearing auth data:\", e);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setToken(null);\n        setCurrentUser(null);\n        delete api.defaults.headers.common['Authorization'];\n      }\n    } else {\n      // No token or no user, ensure Axios default is clear\n      delete api.defaults.headers.common['Authorization'];\n    }\n    setIsLoadingAuth(false);\n  }, [token]); // Re-run if token changes (e.g. on login/logout)\n\n  const login = async (email, password) => {\n    setIsLoadingAuth(true); // Indicate loading for login action\n    try {\n      const { data } = await api.post('/auth/login', { email, password });\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify({\n        _id: data._id,\n        name: data.name,\n        email: data.email,\n        isAdmin: data.isAdmin,\n      }));\n      setToken(data.token); // This will trigger the useEffect above\n      setCurrentUser({\n        _id: data._id,\n        name: data.name,\n        email: data.email,\n        isAdmin: data.isAdmin,\n      });\n      // No need to set Axios header here, useEffect handles it\n      setIsLoadingAuth(false);\n      return data; // Return data for potential further actions in LoginPage\n    } catch (error) {\n      setIsLoadingAuth(false);\n      console.error(\"Login failed in AuthContext:\", error.response || error);\n      throw error; // Re-throw error to be caught by LoginPage\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    setToken(null); // This will trigger the useEffect to clear Axios header\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // No need to delete api.defaults.headers.common['Authorization'] here, useEffect handles it\n    navigate('/login'); // Navigate to login page after logout\n  };\n\n  // Example: Can be used if user profile info is updated elsewhere and needs to reflect in context\n  const updateUserInContext = (updatedUserInfo) => {\n    const fullUserInfo = { ...currentUser, ...updatedUserInfo }; // Merge existing with new\n    localStorage.setItem('user', JSON.stringify(fullUserInfo));\n    setCurrentUser(fullUserInfo);\n  };\n\n  const value = {\n    currentUser,\n    token,\n    isLoadingAuth,\n    login,\n    logout,\n    updateUserInContext, // Changed name to be more specific\n    isAdmin: currentUser?.isAdmin || false,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {/* Show a generic loading screen for auth state or render children */}\n      {/* For simplicity, we let children render, components can check isLoadingAuth if needed */}\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
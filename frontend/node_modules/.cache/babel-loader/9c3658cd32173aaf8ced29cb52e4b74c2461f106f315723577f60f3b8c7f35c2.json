{"ast":null,"code":"var _jsxFileName = \"/Users/harisharan/Desktop/portfolio_copy/frontend/src/contexts/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/ThemeContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // Initialize theme state:\n  // 1. Try to get theme from localStorage.\n  // 2. If not in localStorage, check OS preference.\n  // 3. Default to 'light' if neither is set.\n  const [theme, setTheme] = useState(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      return storedTheme;\n    }\n    // Check OS preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    return 'light'; // Default theme\n  });\n  useEffect(() => {\n    const root = window.document.documentElement; // Get the <html> element\n\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]); // Re-run this effect whenever the theme state changes\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    theme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"nsrv2pfAcKkWP25fkYXWnYDxZq0=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","storedTheme","localStorage","getItem","window","matchMedia","matches","root","document","documentElement","classList","add","remove","setItem","toggleTheme","prevTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harisharan/Desktop/portfolio_copy/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["// frontend/src/contexts/ThemeContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nexport const ThemeProvider = ({ children }) => {\n  // Initialize theme state:\n  // 1. Try to get theme from localStorage.\n  // 2. If not in localStorage, check OS preference.\n  // 3. Default to 'light' if neither is set.\n  const [theme, setTheme] = useState(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      return storedTheme;\n    }\n    // Check OS preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    return 'light'; // Default theme\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement; // Get the <html> element\n\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]); // Re-run this effect whenever the theme state changes\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,OAAOP,UAAU,CAACK,YAAY,CAAC;AACjC,CAAC;AAACE,EAAA,CAFWD,QAAQ;AAIrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACvC,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACf,OAAOA,WAAW;IACpB;IACA;IACA,IAAIG,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EAAE;MAClF,OAAO,MAAM;IACf;IACA,OAAO,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd,MAAMiB,IAAI,GAAGH,MAAM,CAACI,QAAQ,CAACC,eAAe,CAAC,CAAC;;IAE9C,IAAIV,KAAK,KAAK,MAAM,EAAE;MACpBQ,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IAC/B;;IAEA;IACAV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBd,QAAQ,CAAEe,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,MAAMC,KAAK,GAAG;IACZjB,KAAK;IACLe;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EACjCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACvB,GAAA,CA5CWF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
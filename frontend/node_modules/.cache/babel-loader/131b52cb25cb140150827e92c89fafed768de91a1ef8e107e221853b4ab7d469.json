{"ast":null,"code":"var _jsxFileName = \"/Users/harisharan/Desktop/portfolio_py/frontend/src/pages/AboutPage.js\",\n  _s = $RefreshSig$();\n// // frontend/src/pages/AboutPage.js\n// import React, { useState, useEffect } from 'react';\n// import { useAuth } from '../contexts/AuthContext';\n// // Corrected import: getSkillCategories and ensure updateSkill is imported if used\n// import { getSkillCategories, updateSkill ,addSkillCategory} from '../services/skillService';\n\n// // --- Static Data (Keep for other sections for now) ---\n// const aboutMeData = {\n//   introduction: [\"Hello! I'm Harisharan, a passionate Full Stack Developer...\"],\n//   philosophy: \"I believe that the best solutions come from...\"\n// };\n// const educationData = [/* Your static education data */];\n// const certificationsData = [/* Your static certifications data */];\n// const achievementsData = [/* Your static achievements data */];\n// // --- End Static Data ---\n\n// const AboutPage = () => {\n//   const { isAdmin } = useAuth();\n\n//   // Renamed state to reflect it holds categories and their skills\n//   const [skillCategoriesData, setSkillCategoriesData] = useState([]);\n//   const [loadingSkills, setLoadingSkills] = useState(true);\n//   const [errorSkills, setErrorSkills] = useState(null);\n\n//   // --- State for Edit Skill Modal (This will need a rethink for category-based skills) ---\n//   const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n//   const [currentEditingSkill, setCurrentEditingSkill] = useState(null); // Holds the skill object being edited\n//   const [currentEditingCategoryId, setCurrentEditingCategoryId] = useState(null); // To know which category the skill belongs to\n//   const [editFormState, setEditFormState] = useState({ name: '', category: '' }); // 'category' field here might be misleading now\n//   const [editError, setEditError] = useState(null);\n//   // --- End Edit Skill Modal State ---\n\n//   useEffect(() => {\n//     const fetchSkillData = async () => {\n//       try {\n//         setLoadingSkills(true);\n//         const data = await getSkillCategories(); // Using the correctly imported and defined function\n//         setSkillCategoriesData(data);         // Using the correctly named state setter\n//         setErrorSkills(null);\n//       } catch (error) {\n//         setErrorSkills(error.message || 'Failed to fetch skill categories');\n//         console.error(\"Error fetching skill categories:\", error);\n//       } finally {\n//         setLoadingSkills(false);\n//       }\n//     };\n//     fetchSkillData();\n//   }, []);\n\n//   // The groupSkillsByCategory function is likely NOT needed if your backend\n//   // at /api/skillcategories already returns data grouped by category like:\n//   // [ { name: \"Languages\", skills: [{name: \"JS\"}, {name: \"Python\"}] }, ... ]\n//   // If it returns a flat list even from /api/skillcategories, then this function would be needed.\n//   // For now, assuming data is already structured.\n\n//   // --- Admin Action Handlers (Placeholders - need to be adapted for categories/skills within them) ---\n//   const handleAddCategory = () => console.log('TODO: Add New Category');\n//   const handleEditCategory = (category) => console.log('TODO: Edit Category:', category);\n//   const handleDeleteCategory = (category) => console.log('TODO: Delete Category:', category);\n//   const handleAddSkillToCategory = (category) => console.log('TODO: Add skill to category:', category.name);\n\n//   const openEditModal = (skill, categoryId) => {\n//     // This modal was designed for a flat skill structure.\n//     // For category-based skills, you'll need to decide what \"editing a skill\" means.\n//     // Does it mean changing its name? Moving to another category?\n//     // The current editFormState with 'name' and 'category' string is probably not right.\n//     console.warn(\"Opening edit modal for skill. Current modal is for flat structure.\", skill);\n//     setCurrentEditingSkill(skill);\n//     setCurrentEditingCategoryId(categoryId); // Store category context\n//     setEditFormState({ name: skill.name, category: '' }); // 'category' here is placeholder\n//     setEditError(null);\n//     setIsEditModalOpen(true);\n//   };\n\n//   const closeEditModal = () => {\n//     setIsEditModalOpen(false);\n//     setCurrentEditingSkill(null);\n//     setCurrentEditingCategoryId(null);\n//     setEditFormState({ name: '', category: '' });\n//     setEditError(null);\n//   };\n\n//   const handleEditFormChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditFormState(prevState => ({ ...prevState, [name]: value }));\n//   };\n\n//   const handleUpdateSkillSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!currentEditingSkill) return;\n//     setEditError(null);\n\n//     // IMPORTANT: The 'updateSkill' service function currently calls PUT /api/skills/:id\n//     // This is likely NOT the correct endpoint if your skills are nested under categories.\n//     // You'll need a backend endpoint like PUT /api/skillcategories/:catId/skills/:skillId\n//     // and a corresponding service function.\n//     // For now, this will probably fail or update the wrong data structure.\n//     try {\n//       // This will call the old updateSkill, which might not be what you want.\n//       const updatedData = await updateSkill(currentEditingSkill._id, { name: editFormState.name }); // Only sending name for now\n//       console.log('Update response (from old /api/skills route):', updatedData);\n//       // The logic to update skillCategoriesData will be complex here as skills are nested.\n//       // This is a placeholder and needs to be implemented correctly based on your new structure.\n//       setSkillCategoriesData(prevCategories => {\n//         return prevCategories.map(cat => {\n//           if (cat._id === currentEditingCategoryId) {\n//             return {\n//               ...cat,\n//               skills: cat.skills.map(s => s._id === updatedData._id ? updatedData : s)\n//             };\n//           }\n//           return cat;\n//         });\n//       });\n//       closeEditModal();\n//     } catch (error) {\n//       console.error('Failed to update skill (via old route):', error);\n//       setEditError(error.message || 'Failed to update skill. Please try again.');\n//     }\n//   };\n\n//   const handleDeleteSkillFromCategory = (skill, categoryId) => {\n//     console.log('TODO: Delete skill:', skill, 'from category ID:', categoryId);\n//   };\n//   // --- End Admin Action Handlers ---\n\n//   return (\n//     <>\n//       <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16 space-y-16 md:space-y-20\">\n//         {/* Who I Am Section */}\n//         <section id=\"who-i-am\" className=\"bg-white dark:bg-slate-800 p-6 sm:p-10 rounded-xl shadow-xl transition-colors duration-300\">\n//             <h2 className=\"text-3xl font-semibold text-gray-800 dark:text-gray-100 mb-6\">Who I Am</h2>\n//             <div className=\"space-y-4 text-gray-700 dark:text-gray-300 leading-relaxed text-base sm:text-lg\">\n//               {aboutMeData.introduction.map((paragraph, index) => ( <p key={index}>{paragraph}</p> ))}\n//               {aboutMeData.philosophy && ( <p className=\"mt-6 italic border-l-4 border-indigo-500 dark:border-indigo-400 pl-4 py-3 bg-indigo-50 dark:bg-slate-700/60 rounded-r-md\"> \"{aboutMeData.philosophy}\" </p> )}\n//             </div>\n//         </section>\n\n//         {/* Skills Section - Updated to use skillCategoriesData */}\n//         <section id=\"skills\">\n//           <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 sm:mb-10\">\n//               <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white text-center sm:text-left flex-grow mb-4 sm:mb-0\">\n//                   Technical Skills\n//               </h2>\n//               {isAdmin && ( <button onClick={handleAddCategory} className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\"> Add New Category </button> )}\n//           </div>\n\n//           {loadingSkills && ( <div className=\"text-center py-10 dark:text-gray-300\"><p>Loading skills...</p></div> )}\n//           {errorSkills && ( <div className=\"text-center py-10 text-red-500 bg-red-100 p-4 rounded-md\"><p>Error: {errorSkills}</p></div> )}\n\n//           {!loadingSkills && !errorSkills && skillCategoriesData.length === 0 && (\n//               <div className=\"text-center py-10 text-gray-500 bg-gray-50 dark:bg-slate-800 p-6 rounded-xl shadow-md\">\n//                   <p>No skill categories have been added yet.</p>\n//                   {isAdmin && ( <button onClick={handleAddCategory} className=\"mt-4 bg-purple-500 ...\"> Add First Category </button> )}\n//               </div>\n//           )}\n\n//           {!loadingSkills && !errorSkills && skillCategoriesData.length > 0 && (\n//             <div className=\"space-y-10\">\n//               {/* Assuming skillCategoriesData is an array of: { _id: 'catId', name: 'Category Name', skills: [{_id: 'skillId', name: 'Skill Name'}, ...] } */}\n//               {skillCategoriesData.map((category) => (\n//                 <div key={category._id} className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-xl\">\n//                   <div className=\"flex justify-between items-center mb-4\">\n//                     <h3 className=\"text-xl sm:text-2xl font-semibold text-indigo-600 dark:text-indigo-400\">\n//                       {category.name} {/* Display category name */}\n//                     </h3>\n//                     {isAdmin && (\n//                       <div className=\"flex gap-2\">\n//                         <button onClick={() => handleAddSkillToCategory(category)} title=\"Add Skill to this Category\" className=\"text-green-500 hover:text-green-700 text-xs p-1\">Add Skill</button>\n//                         <button onClick={() => handleEditCategory(category)} title=\"Edit Category\" className=\"text-blue-500 hover:text-blue-700 text-xs p-1\">Edit Cat.</button>\n//                         <button onClick={() => handleDeleteCategory(category)} title=\"Delete Category\" className=\"text-red-500 hover:text-red-700 text-xs p-1\">Del. Cat.</button>\n//                       </div>\n//                     )}\n//                   </div>\n//                   {(category.skills && category.skills.length > 0) ? (\n//                     <div className=\"flex flex-wrap gap-3\">\n//                       {category.skills.map((skill) => ( // Display skills from the category\n//                         <div \n//                             key={skill._id} \n//                             className=\"group bg-indigo-100 dark:bg-slate-700 text-indigo-800 dark:text-indigo-300 px-4 py-2 rounded-full text-sm font-medium shadow-sm flex items-center gap-2\"\n//                         >\n//                           <span>{skill.name}</span>\n//                           {isAdmin && (\n//                             <div className=\"flex gap-1 items-center opacity-0 group-hover:opacity-100\">\n//                               <button onClick={() => openEditModal(skill, category._id)} title=\"Edit Skill\" className=\"text-blue-600 p-1 text-xs\"> E </button>\n//                               <button onClick={() => handleDeleteSkillFromCategory(skill, category._id)} title=\"Delete Skill\" className=\"text-red-600 p-1 text-xs\"> X </button>\n//                             </div>\n//                           )}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   ) : (\n//                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">No skills listed in this category.</p>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n\n//         {/* ... Other sections ... */}\n//       </div>\n\n//       {/* --- Edit Skill Modal (This is still based on the old flat skill structure and needs significant rework) --- */}\n//       {isEditModalOpen && currentEditingSkill && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\">\n//             <div className=\"flex justify-between items-center mb-6\">\n//               <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">Edit Skill in Category</h2>\n//               <button onClick={closeEditModal} className=\"text-gray-500 hover:text-gray-700 text-2xl\">&times;</button>\n//             </div>\n//             <form onSubmit={handleUpdateSkillSubmit} className=\"space-y-6\">\n//               <div>\n//                 <label htmlFor=\"skillName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Skill Name</label>\n//                 <input type=\"text\" name=\"name\" id=\"skillName\" value={editFormState.name} onChange={handleEditFormChange} required className=\"w-full px-4 py-2 border rounded-lg dark:bg-slate-700 dark:text-white\" />\n//               </div>\n//               {/* The 'category' field in this form is no longer relevant if editing a skill within an existing category */}\n//               {/* You might add fields like 'description' or other skill-specific properties here */}\n//               {editError && ( <p className=\"text-sm text-red-600 bg-red-100 p-3 rounded-md\">{editError}</p> )}\n//               <div className=\"flex justify-end gap-4 pt-2\">\n//                 <button type=\"button\" onClick={closeEditModal} className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\">Cancel</button>\n//                 <button type=\"submit\" className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-lg\">Save Changes</button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default AboutPage;\n// frontend/src/pages/AboutPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getSkillCategories, addSkillCategory } from '../services/skillService'; // Added addSkillCategory\n\n// --- Static Data (Keep for other sections for now) ---\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst aboutMeData = {\n  introduction: [\"Hello! I'm Harisharan, a passionate Full Stack Developer...\"],\n  philosophy: \"I believe that the best solutions come from...\"\n};\nconst educationData = [/* Your static education data */];\nconst certificationsData = [/* Your static certifications data */];\nconst achievementsData = [/* Your static achievements data */];\n// --- End Static Data ---\n\nconst AboutPage = () => {\n  _s();\n  const {\n    isAdmin\n  } = useAuth();\n  const [skillCategoriesData, setSkillCategoriesData] = useState([]);\n  const [loadingSkills, setLoadingSkills] = useState(true);\n  const [errorSkills, setErrorSkills] = useState(null);\n\n  // --- State for ADD CATEGORY Modal ---\n  const [isAddCategoryModalOpen, setIsAddCategoryModalOpen] = useState(false);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [addCategoryError, setAddCategoryError] = useState(null);\n  // --- End ADD CATEGORY Modal State ---\n\n  // --- State for Edit Skill Modal (Placeholder - needs full implementation for category context) ---\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentEditingSkill, setCurrentEditingSkill] = useState(null);\n  const [currentEditingCategoryId, setCurrentEditingCategoryId] = useState(null);\n  const [editFormState, setEditFormState] = useState({\n    name: ''\n  }); // Simplified for now\n  const [editError, setEditError] = useState(null);\n  // --- End Edit Skill Modal State ---\n\n  // --- STATE FOR EDIT CATEGORY MODAL ---\n  const [isEditCategoryModalOpen, setIsEditCategoryModalOpen] = useState(false);\n  const [currentEditingCategory, setCurrentEditingCategory] = useState(null); // Will hold the category object being edited\n  const [editCategoryName, setEditCategoryName] = useState('');\n  const [editCategoryError, setEditCategoryError] = useState(null);\n  // --- END EDIT CATEGORY MODAL STATE ---\n  useEffect(() => {\n    const fetchSkillData = async () => {\n      try {\n        setLoadingSkills(true);\n        const data = await getSkillCategories();\n        setSkillCategoriesData(data);\n        setErrorSkills(null);\n      } catch (error) {\n        setErrorSkills(error.message || 'Failed to fetch skill categories');\n      } finally {\n        setLoadingSkills(false);\n      }\n    };\n    fetchSkillData();\n  }, []);\n\n  // --- ADD CATEGORY Modal Handlers ---\n  const openAddCategoryModal = () => {\n    setNewCategoryName('');\n    setAddCategoryError(null);\n    setIsAddCategoryModalOpen(true);\n  };\n  const closeAddCategoryModal = () => {\n    setIsAddCategoryModalOpen(false);\n    setNewCategoryName('');\n    setAddCategoryError(null);\n  };\n  const handleNewCategoryNameChange = e => {\n    setNewCategoryName(e.target.value);\n  };\n  const handleAddNewCategorySubmit = async e => {\n    e.preventDefault();\n    if (!newCategoryName.trim()) {\n      setAddCategoryError('Category name cannot be empty.');\n      return;\n    }\n    setAddCategoryError(null);\n    try {\n      // Assuming backend expects { name: \"Category Name\" }\n      // And returns the full new category object e.g. { _id: ..., name: ..., skills: [] }\n      const newCategory = await addSkillCategory({\n        name: newCategoryName\n      });\n      setSkillCategoriesData(prevCategories => [...prevCategories, newCategory]);\n      closeAddCategoryModal();\n    } catch (error) {\n      setAddCategoryError(error.message || 'Failed to add category. Please try again.');\n    }\n  };\n  // --- END ADD CATEGORY Modal Handlers ---\n\n  // --- Placeholder Edit/Delete Handlers for Categories & Skills ---\n  const handleEditCategory = category => console.log('TODO: Edit Category:', category);\n  const handleDeleteCategory = category => console.log('TODO: Delete Category:', category);\n  const handleAddSkillToCategory = category => console.log('TODO: Add skill to category:', category.name);\n  const openEditSkillModal = (skill, categoryId) => {\n    /* Old edit logic was here, needs rethink */console.log('TODO: Open edit skill modal for:', skill, categoryId);\n  };\n  const handleDeleteSkillFromCategory = (skill, categoryId) => console.log('TODO: Delete skill:', skill, 'from category ID:', categoryId);\n  const closeEditSkillModal = () => setIsEditModalOpen(false);\n  // --- End Placeholder Edit/Delete ---\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16 space-y-16 md:space-y-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"who-i-am\",\n        className: \"bg-white dark:bg-slate-800 p-6 sm:p-10 rounded-xl shadow-xl transition-colors duration-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-semibold text-gray-800 dark:text-gray-100 mb-6\",\n          children: \"Who I Am\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 text-gray-700 dark:text-gray-300 leading-relaxed text-base sm:text-lg\",\n          children: [aboutMeData.introduction.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 69\n          }, this)), aboutMeData.philosophy && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-6 italic border-l-4 border-indigo-500 dark:border-indigo-400 pl-4 py-3 bg-indigo-50 dark:bg-slate-700/60 rounded-r-md\",\n            children: [\" \\\"\", aboutMeData.philosophy, \"\\\" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"skills\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row justify-between items-center mb-8 sm:mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-bold text-gray-900 dark:text-white text-center sm:text-left flex-grow mb-4 sm:mb-0\",\n            children: \"Technical Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openAddCategoryModal,\n            className: \"bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\",\n            children: \" Add New Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), loadingSkills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-10 dark:text-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading skills...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 31\n        }, this), errorSkills && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-10 text-red-500 bg-red-100 p-4 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error: \", errorSkills]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 103\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }, this), !loadingSkills && !errorSkills && skillCategoriesData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-10 text-gray-500 bg-gray-50 dark:bg-slate-800 p-6 rounded-xl shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No skill categories have been added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openAddCategoryModal,\n            className: \"mt-4 bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\",\n            children: \" Add First Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this), !loadingSkills && !errorSkills && skillCategoriesData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-10\",\n          children: skillCategoriesData.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-xl\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl sm:text-2xl font-semibold text-indigo-600 dark:text-indigo-400\",\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAddSkillToCategory(category),\n                  title: \"Add Skill to this Category\",\n                  className: \"text-green-500 hover:text-green-700 text-xs p-1\",\n                  children: \"Add Skill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditCategory(category),\n                  title: \"Edit Category\",\n                  className: \"text-blue-500 hover:text-blue-700 text-xs p-1\",\n                  children: \"Edit Cat.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteCategory(category),\n                  title: \"Delete Category\",\n                  className: \"text-red-500 hover:text-red-700 text-xs p-1\",\n                  children: \"Del. Cat.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), category.skills && category.skills.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-3\",\n              children: category.skills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group bg-indigo-100 dark:bg-slate-700 text-indigo-800 dark:text-indigo-300 px-4 py-2 rounded-full text-sm font-medium shadow-sm flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: skill.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 27\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-1 items-center opacity-0 group-hover:opacity-100\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => openEditSkillModal(skill, category._id),\n                    title: \"Edit Skill\",\n                    className: \"text-blue-600 p-1 text-xs\",\n                    children: \" E \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteSkillFromCategory(skill, category._id),\n                    title: \"Delete Skill\",\n                    className: \"text-red-600 p-1 text-xs\",\n                    children: \" X \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 29\n                }, this)]\n              }, skill._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 dark:text-gray-400\",\n              children: \"No skills listed in this category.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 25\n            }, this)]\n          }, category._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), isAddCategoryModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-800 dark:text-white\",\n            children: \"Add New Skill Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeAddCategoryModal,\n            className: \"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-2xl\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddNewCategorySubmit,\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newCategoryName\",\n              className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"newCategoryName\",\n              value: newCategoryName,\n              onChange: handleNewCategoryNameChange,\n              required: true,\n              className: \"w-full px-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm\",\n              placeholder: \"e.g., Languages, Frameworks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), addCategoryError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30 p-3 rounded-md\",\n            children: addCategoryError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end gap-4 pt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeAddCategoryModal,\n              className: \"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 rounded-lg shadow-sm\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-4 py-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 dark:hover:bg-indigo-500 rounded-lg shadow-sm\",\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this), isEditModalOpen && currentEditingSkill &&\n    /*#__PURE__*/\n    // ... This modal's JSX is still the old one for editing flat skills ...\n    // We will replace this when we work on \"Edit skill within category\"\n    _jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-800 dark:text-white\",\n            children: \"Edit Skill (Needs Rework)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeEditSkillModal,\n            className: \"text-gray-500 hover:text-gray-700 text-2xl\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dark:text-white\",\n          children: \"This modal needs to be updated for editing skills within categories.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-4 pt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditSkillModal,\n            className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AboutPage, \"I4s1gPq8Mrt6bQy5PC1G2OPelsI=\", false, function () {\n  return [useAuth];\n});\n_c = AboutPage;\nexport default AboutPage;\nvar _c;\n$RefreshReg$(_c, \"AboutPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","getSkillCategories","addSkillCategory","jsxDEV","_jsxDEV","Fragment","_Fragment","aboutMeData","introduction","philosophy","educationData","certificationsData","achievementsData","AboutPage","_s","isAdmin","skillCategoriesData","setSkillCategoriesData","loadingSkills","setLoadingSkills","errorSkills","setErrorSkills","isAddCategoryModalOpen","setIsAddCategoryModalOpen","newCategoryName","setNewCategoryName","addCategoryError","setAddCategoryError","isEditModalOpen","setIsEditModalOpen","currentEditingSkill","setCurrentEditingSkill","currentEditingCategoryId","setCurrentEditingCategoryId","editFormState","setEditFormState","name","editError","setEditError","isEditCategoryModalOpen","setIsEditCategoryModalOpen","currentEditingCategory","setCurrentEditingCategory","editCategoryName","setEditCategoryName","editCategoryError","setEditCategoryError","fetchSkillData","data","error","message","openAddCategoryModal","closeAddCategoryModal","handleNewCategoryNameChange","e","target","value","handleAddNewCategorySubmit","preventDefault","trim","newCategory","prevCategories","handleEditCategory","category","console","log","handleDeleteCategory","handleAddSkillToCategory","openEditSkillModal","skill","categoryId","handleDeleteSkillFromCategory","closeEditSkillModal","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","paragraph","index","onClick","length","title","skills","_id","onSubmit","htmlFor","type","onChange","required","placeholder","_c","$RefreshReg$"],"sources":["/Users/harisharan/Desktop/portfolio_py/frontend/src/pages/AboutPage.js"],"sourcesContent":["// // frontend/src/pages/AboutPage.js\n// import React, { useState, useEffect } from 'react';\n// import { useAuth } from '../contexts/AuthContext';\n// // Corrected import: getSkillCategories and ensure updateSkill is imported if used\n// import { getSkillCategories, updateSkill ,addSkillCategory} from '../services/skillService';\n\n// // --- Static Data (Keep for other sections for now) ---\n// const aboutMeData = {\n//   introduction: [\"Hello! I'm Harisharan, a passionate Full Stack Developer...\"],\n//   philosophy: \"I believe that the best solutions come from...\"\n// };\n// const educationData = [/* Your static education data */];\n// const certificationsData = [/* Your static certifications data */];\n// const achievementsData = [/* Your static achievements data */];\n// // --- End Static Data ---\n\n// const AboutPage = () => {\n//   const { isAdmin } = useAuth();\n\n//   // Renamed state to reflect it holds categories and their skills\n//   const [skillCategoriesData, setSkillCategoriesData] = useState([]);\n//   const [loadingSkills, setLoadingSkills] = useState(true);\n//   const [errorSkills, setErrorSkills] = useState(null);\n\n//   // --- State for Edit Skill Modal (This will need a rethink for category-based skills) ---\n//   const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n//   const [currentEditingSkill, setCurrentEditingSkill] = useState(null); // Holds the skill object being edited\n//   const [currentEditingCategoryId, setCurrentEditingCategoryId] = useState(null); // To know which category the skill belongs to\n//   const [editFormState, setEditFormState] = useState({ name: '', category: '' }); // 'category' field here might be misleading now\n//   const [editError, setEditError] = useState(null);\n//   // --- End Edit Skill Modal State ---\n\n//   useEffect(() => {\n//     const fetchSkillData = async () => {\n//       try {\n//         setLoadingSkills(true);\n//         const data = await getSkillCategories(); // Using the correctly imported and defined function\n//         setSkillCategoriesData(data);         // Using the correctly named state setter\n//         setErrorSkills(null);\n//       } catch (error) {\n//         setErrorSkills(error.message || 'Failed to fetch skill categories');\n//         console.error(\"Error fetching skill categories:\", error);\n//       } finally {\n//         setLoadingSkills(false);\n//       }\n//     };\n//     fetchSkillData();\n//   }, []);\n\n//   // The groupSkillsByCategory function is likely NOT needed if your backend\n//   // at /api/skillcategories already returns data grouped by category like:\n//   // [ { name: \"Languages\", skills: [{name: \"JS\"}, {name: \"Python\"}] }, ... ]\n//   // If it returns a flat list even from /api/skillcategories, then this function would be needed.\n//   // For now, assuming data is already structured.\n\n//   // --- Admin Action Handlers (Placeholders - need to be adapted for categories/skills within them) ---\n//   const handleAddCategory = () => console.log('TODO: Add New Category');\n//   const handleEditCategory = (category) => console.log('TODO: Edit Category:', category);\n//   const handleDeleteCategory = (category) => console.log('TODO: Delete Category:', category);\n//   const handleAddSkillToCategory = (category) => console.log('TODO: Add skill to category:', category.name);\n\n//   const openEditModal = (skill, categoryId) => {\n//     // This modal was designed for a flat skill structure.\n//     // For category-based skills, you'll need to decide what \"editing a skill\" means.\n//     // Does it mean changing its name? Moving to another category?\n//     // The current editFormState with 'name' and 'category' string is probably not right.\n//     console.warn(\"Opening edit modal for skill. Current modal is for flat structure.\", skill);\n//     setCurrentEditingSkill(skill);\n//     setCurrentEditingCategoryId(categoryId); // Store category context\n//     setEditFormState({ name: skill.name, category: '' }); // 'category' here is placeholder\n//     setEditError(null);\n//     setIsEditModalOpen(true);\n//   };\n\n//   const closeEditModal = () => {\n//     setIsEditModalOpen(false);\n//     setCurrentEditingSkill(null);\n//     setCurrentEditingCategoryId(null);\n//     setEditFormState({ name: '', category: '' });\n//     setEditError(null);\n//   };\n\n//   const handleEditFormChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditFormState(prevState => ({ ...prevState, [name]: value }));\n//   };\n\n//   const handleUpdateSkillSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!currentEditingSkill) return;\n//     setEditError(null);\n\n//     // IMPORTANT: The 'updateSkill' service function currently calls PUT /api/skills/:id\n//     // This is likely NOT the correct endpoint if your skills are nested under categories.\n//     // You'll need a backend endpoint like PUT /api/skillcategories/:catId/skills/:skillId\n//     // and a corresponding service function.\n//     // For now, this will probably fail or update the wrong data structure.\n//     try {\n//       // This will call the old updateSkill, which might not be what you want.\n//       const updatedData = await updateSkill(currentEditingSkill._id, { name: editFormState.name }); // Only sending name for now\n//       console.log('Update response (from old /api/skills route):', updatedData);\n//       // The logic to update skillCategoriesData will be complex here as skills are nested.\n//       // This is a placeholder and needs to be implemented correctly based on your new structure.\n//       setSkillCategoriesData(prevCategories => {\n//         return prevCategories.map(cat => {\n//           if (cat._id === currentEditingCategoryId) {\n//             return {\n//               ...cat,\n//               skills: cat.skills.map(s => s._id === updatedData._id ? updatedData : s)\n//             };\n//           }\n//           return cat;\n//         });\n//       });\n//       closeEditModal();\n//     } catch (error) {\n//       console.error('Failed to update skill (via old route):', error);\n//       setEditError(error.message || 'Failed to update skill. Please try again.');\n//     }\n//   };\n\n//   const handleDeleteSkillFromCategory = (skill, categoryId) => {\n//     console.log('TODO: Delete skill:', skill, 'from category ID:', categoryId);\n//   };\n//   // --- End Admin Action Handlers ---\n\n//   return (\n//     <>\n//       <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16 space-y-16 md:space-y-20\">\n//         {/* Who I Am Section */}\n//         <section id=\"who-i-am\" className=\"bg-white dark:bg-slate-800 p-6 sm:p-10 rounded-xl shadow-xl transition-colors duration-300\">\n//             <h2 className=\"text-3xl font-semibold text-gray-800 dark:text-gray-100 mb-6\">Who I Am</h2>\n//             <div className=\"space-y-4 text-gray-700 dark:text-gray-300 leading-relaxed text-base sm:text-lg\">\n//               {aboutMeData.introduction.map((paragraph, index) => ( <p key={index}>{paragraph}</p> ))}\n//               {aboutMeData.philosophy && ( <p className=\"mt-6 italic border-l-4 border-indigo-500 dark:border-indigo-400 pl-4 py-3 bg-indigo-50 dark:bg-slate-700/60 rounded-r-md\"> \"{aboutMeData.philosophy}\" </p> )}\n//             </div>\n//         </section>\n\n//         {/* Skills Section - Updated to use skillCategoriesData */}\n//         <section id=\"skills\">\n//           <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 sm:mb-10\">\n//               <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white text-center sm:text-left flex-grow mb-4 sm:mb-0\">\n//                   Technical Skills\n//               </h2>\n//               {isAdmin && ( <button onClick={handleAddCategory} className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\"> Add New Category </button> )}\n//           </div>\n          \n//           {loadingSkills && ( <div className=\"text-center py-10 dark:text-gray-300\"><p>Loading skills...</p></div> )}\n//           {errorSkills && ( <div className=\"text-center py-10 text-red-500 bg-red-100 p-4 rounded-md\"><p>Error: {errorSkills}</p></div> )}\n          \n//           {!loadingSkills && !errorSkills && skillCategoriesData.length === 0 && (\n//               <div className=\"text-center py-10 text-gray-500 bg-gray-50 dark:bg-slate-800 p-6 rounded-xl shadow-md\">\n//                   <p>No skill categories have been added yet.</p>\n//                   {isAdmin && ( <button onClick={handleAddCategory} className=\"mt-4 bg-purple-500 ...\"> Add First Category </button> )}\n//               </div>\n//           )}\n\n//           {!loadingSkills && !errorSkills && skillCategoriesData.length > 0 && (\n//             <div className=\"space-y-10\">\n//               {/* Assuming skillCategoriesData is an array of: { _id: 'catId', name: 'Category Name', skills: [{_id: 'skillId', name: 'Skill Name'}, ...] } */}\n//               {skillCategoriesData.map((category) => (\n//                 <div key={category._id} className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-xl\">\n//                   <div className=\"flex justify-between items-center mb-4\">\n//                     <h3 className=\"text-xl sm:text-2xl font-semibold text-indigo-600 dark:text-indigo-400\">\n//                       {category.name} {/* Display category name */}\n//                     </h3>\n//                     {isAdmin && (\n//                       <div className=\"flex gap-2\">\n//                         <button onClick={() => handleAddSkillToCategory(category)} title=\"Add Skill to this Category\" className=\"text-green-500 hover:text-green-700 text-xs p-1\">Add Skill</button>\n//                         <button onClick={() => handleEditCategory(category)} title=\"Edit Category\" className=\"text-blue-500 hover:text-blue-700 text-xs p-1\">Edit Cat.</button>\n//                         <button onClick={() => handleDeleteCategory(category)} title=\"Delete Category\" className=\"text-red-500 hover:text-red-700 text-xs p-1\">Del. Cat.</button>\n//                       </div>\n//                     )}\n//                   </div>\n//                   {(category.skills && category.skills.length > 0) ? (\n//                     <div className=\"flex flex-wrap gap-3\">\n//                       {category.skills.map((skill) => ( // Display skills from the category\n//                         <div \n//                             key={skill._id} \n//                             className=\"group bg-indigo-100 dark:bg-slate-700 text-indigo-800 dark:text-indigo-300 px-4 py-2 rounded-full text-sm font-medium shadow-sm flex items-center gap-2\"\n//                         >\n//                           <span>{skill.name}</span>\n//                           {isAdmin && (\n//                             <div className=\"flex gap-1 items-center opacity-0 group-hover:opacity-100\">\n//                               <button onClick={() => openEditModal(skill, category._id)} title=\"Edit Skill\" className=\"text-blue-600 p-1 text-xs\"> E </button>\n//                               <button onClick={() => handleDeleteSkillFromCategory(skill, category._id)} title=\"Delete Skill\" className=\"text-red-600 p-1 text-xs\"> X </button>\n//                             </div>\n//                           )}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   ) : (\n//                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">No skills listed in this category.</p>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n\n//         {/* ... Other sections ... */}\n//       </div>\n\n//       {/* --- Edit Skill Modal (This is still based on the old flat skill structure and needs significant rework) --- */}\n//       {isEditModalOpen && currentEditingSkill && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\">\n//             <div className=\"flex justify-between items-center mb-6\">\n//               <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">Edit Skill in Category</h2>\n//               <button onClick={closeEditModal} className=\"text-gray-500 hover:text-gray-700 text-2xl\">&times;</button>\n//             </div>\n//             <form onSubmit={handleUpdateSkillSubmit} className=\"space-y-6\">\n//               <div>\n//                 <label htmlFor=\"skillName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Skill Name</label>\n//                 <input type=\"text\" name=\"name\" id=\"skillName\" value={editFormState.name} onChange={handleEditFormChange} required className=\"w-full px-4 py-2 border rounded-lg dark:bg-slate-700 dark:text-white\" />\n//               </div>\n//               {/* The 'category' field in this form is no longer relevant if editing a skill within an existing category */}\n//               {/* You might add fields like 'description' or other skill-specific properties here */}\n//               {editError && ( <p className=\"text-sm text-red-600 bg-red-100 p-3 rounded-md\">{editError}</p> )}\n//               <div className=\"flex justify-end gap-4 pt-2\">\n//                 <button type=\"button\" onClick={closeEditModal} className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\">Cancel</button>\n//                 <button type=\"submit\" className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-lg\">Save Changes</button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default AboutPage;\n// frontend/src/pages/AboutPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getSkillCategories, addSkillCategory } from '../services/skillService'; // Added addSkillCategory\n\n// --- Static Data (Keep for other sections for now) ---\nconst aboutMeData = {\n  introduction: [\"Hello! I'm Harisharan, a passionate Full Stack Developer...\"],\n  philosophy: \"I believe that the best solutions come from...\"\n};\nconst educationData = [/* Your static education data */];\nconst certificationsData = [/* Your static certifications data */];\nconst achievementsData = [/* Your static achievements data */];\n// --- End Static Data ---\n\nconst AboutPage = () => {\n  const { isAdmin } = useAuth();\n\n  const [skillCategoriesData, setSkillCategoriesData] = useState([]);\n  const [loadingSkills, setLoadingSkills] = useState(true);\n  const [errorSkills, setErrorSkills] = useState(null);\n\n  // --- State for ADD CATEGORY Modal ---\n  const [isAddCategoryModalOpen, setIsAddCategoryModalOpen] = useState(false);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [addCategoryError, setAddCategoryError] = useState(null);\n  // --- End ADD CATEGORY Modal State ---\n\n  // --- State for Edit Skill Modal (Placeholder - needs full implementation for category context) ---\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentEditingSkill, setCurrentEditingSkill] = useState(null);\n  const [currentEditingCategoryId, setCurrentEditingCategoryId] = useState(null);\n  const [editFormState, setEditFormState] = useState({ name: ''}); // Simplified for now\n  const [editError, setEditError] = useState(null);\n  // --- End Edit Skill Modal State ---\n\n  // --- STATE FOR EDIT CATEGORY MODAL ---\n  const [isEditCategoryModalOpen, setIsEditCategoryModalOpen] = useState(false);\n  const [currentEditingCategory, setCurrentEditingCategory] = useState(null); // Will hold the category object being edited\n  const [editCategoryName, setEditCategoryName] = useState('');\n  const [editCategoryError, setEditCategoryError] = useState(null);\n  // --- END EDIT CATEGORY MODAL STATE ---\n  useEffect(() => {\n    const fetchSkillData = async () => {\n      try {\n        setLoadingSkills(true);\n        const data = await getSkillCategories();\n        setSkillCategoriesData(data);\n        setErrorSkills(null);\n      } catch (error) {\n        setErrorSkills(error.message || 'Failed to fetch skill categories');\n      } finally {\n        setLoadingSkills(false);\n      }\n    };\n    fetchSkillData();\n  }, []);\n\n  // --- ADD CATEGORY Modal Handlers ---\n  const openAddCategoryModal = () => {\n    setNewCategoryName('');\n    setAddCategoryError(null);\n    setIsAddCategoryModalOpen(true);\n  };\n\n  const closeAddCategoryModal = () => {\n    setIsAddCategoryModalOpen(false);\n    setNewCategoryName('');\n    setAddCategoryError(null);\n  };\n\n  const handleNewCategoryNameChange = (e) => {\n    setNewCategoryName(e.target.value);\n  };\n\n  const handleAddNewCategorySubmit = async (e) => {\n    e.preventDefault();\n    if (!newCategoryName.trim()) {\n      setAddCategoryError('Category name cannot be empty.');\n      return;\n    }\n    setAddCategoryError(null);\n    try {\n      // Assuming backend expects { name: \"Category Name\" }\n      // And returns the full new category object e.g. { _id: ..., name: ..., skills: [] }\n      const newCategory = await addSkillCategory({ name: newCategoryName });\n      setSkillCategoriesData(prevCategories => [...prevCategories, newCategory]);\n      closeAddCategoryModal();\n    } catch (error) {\n      setAddCategoryError(error.message || 'Failed to add category. Please try again.');\n    }\n  };\n  // --- END ADD CATEGORY Modal Handlers ---\n\n  // --- Placeholder Edit/Delete Handlers for Categories & Skills ---\n  const handleEditCategory = (category) => console.log('TODO: Edit Category:', category);\n  const handleDeleteCategory = (category) => console.log('TODO: Delete Category:', category);\n  const handleAddSkillToCategory = (category) => console.log('TODO: Add skill to category:', category.name);\n  const openEditSkillModal = (skill, categoryId) => { /* Old edit logic was here, needs rethink */ console.log('TODO: Open edit skill modal for:', skill, categoryId);};\n  const handleDeleteSkillFromCategory = (skill, categoryId) => console.log('TODO: Delete skill:', skill, 'from category ID:', categoryId);\n  const closeEditSkillModal = () => setIsEditModalOpen(false);\n  // --- End Placeholder Edit/Delete ---\n\n  return (\n    <>\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16 space-y-16 md:space-y-20\">\n        {/* Who I Am Section */}\n        <section id=\"who-i-am\" className=\"bg-white dark:bg-slate-800 p-6 sm:p-10 rounded-xl shadow-xl transition-colors duration-300\">\n            <h2 className=\"text-3xl font-semibold text-gray-800 dark:text-gray-100 mb-6\">Who I Am</h2>\n            <div className=\"space-y-4 text-gray-700 dark:text-gray-300 leading-relaxed text-base sm:text-lg\">\n              {aboutMeData.introduction.map((paragraph, index) => ( <p key={index}>{paragraph}</p> ))}\n              {aboutMeData.philosophy && ( <p className=\"mt-6 italic border-l-4 border-indigo-500 dark:border-indigo-400 pl-4 py-3 bg-indigo-50 dark:bg-slate-700/60 rounded-r-md\"> \"{aboutMeData.philosophy}\" </p> )}\n            </div>\n        </section>\n\n        {/* Skills Section */}\n        <section id=\"skills\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 sm:mb-10\">\n              <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white text-center sm:text-left flex-grow mb-4 sm:mb-0\">\n                  Technical Skills\n              </h2>\n              {isAdmin && ( <button onClick={openAddCategoryModal} className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\"> Add New Category </button> )}\n          </div>\n          \n          {loadingSkills && ( <div className=\"text-center py-10 dark:text-gray-300\"><p>Loading skills...</p></div> )}\n          {errorSkills && ( <div className=\"text-center py-10 text-red-500 bg-red-100 p-4 rounded-md\"><p>Error: {errorSkills}</p></div> )}\n          \n          {!loadingSkills && !errorSkills && skillCategoriesData.length === 0 && (\n              <div className=\"text-center py-10 text-gray-500 bg-gray-50 dark:bg-slate-800 p-6 rounded-xl shadow-md\">\n                  <p>No skill categories have been added yet.</p>\n                  {isAdmin && ( <button onClick={openAddCategoryModal} className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md text-sm\"> Add First Category </button> )}\n              </div>\n          )}\n\n          {!loadingSkills && !errorSkills && skillCategoriesData.length > 0 && (\n            <div className=\"space-y-10\">\n              {skillCategoriesData.map((category) => (\n                <div key={category._id} className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-xl\">\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <h3 className=\"text-xl sm:text-2xl font-semibold text-indigo-600 dark:text-indigo-400\">\n                      {category.name}\n                    </h3>\n                    {isAdmin && (\n                      <div className=\"flex gap-2\">\n                        <button onClick={() => handleAddSkillToCategory(category)} title=\"Add Skill to this Category\" className=\"text-green-500 hover:text-green-700 text-xs p-1\">Add Skill</button>\n                        <button onClick={() => handleEditCategory(category)} title=\"Edit Category\" className=\"text-blue-500 hover:text-blue-700 text-xs p-1\">Edit Cat.</button>\n                        <button onClick={() => handleDeleteCategory(category)} title=\"Delete Category\" className=\"text-red-500 hover:text-red-700 text-xs p-1\">Del. Cat.</button>\n                      </div>\n                    )}\n                  </div>\n                  {(category.skills && category.skills.length > 0) ? (\n                    <div className=\"flex flex-wrap gap-3\">\n                      {category.skills.map((skill) => (\n                        <div key={skill._id} className=\"group bg-indigo-100 dark:bg-slate-700 text-indigo-800 dark:text-indigo-300 px-4 py-2 rounded-full text-sm font-medium shadow-sm flex items-center gap-2\">\n                          <span>{skill.name}</span>\n                          {isAdmin && (\n                            <div className=\"flex gap-1 items-center opacity-0 group-hover:opacity-100\">\n                              <button onClick={() => openEditSkillModal(skill, category._id)} title=\"Edit Skill\" className=\"text-blue-600 p-1 text-xs\"> E </button>\n                              <button onClick={() => handleDeleteSkillFromCategory(skill, category._id)} title=\"Delete Skill\" className=\"text-red-600 p-1 text-xs\"> X </button>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ) : ( <p className=\"text-sm text-gray-500 dark:text-gray-400\">No skills listed in this category.</p> )}\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* ... Other sections ... */}\n      </div>\n\n      {/* --- ADD SKILL CATEGORY MODAL --- */}\n      {isAddCategoryModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">Add New Skill Category</h2>\n              <button onClick={closeAddCategoryModal} className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-2xl\">&times;</button>\n            </div>\n            <form onSubmit={handleAddNewCategorySubmit} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"newCategoryName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Category Name</label>\n                <input\n                  type=\"text\"\n                  id=\"newCategoryName\"\n                  value={newCategoryName}\n                  onChange={handleNewCategoryNameChange}\n                  required\n                  className=\"w-full px-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm\"\n                  placeholder=\"e.g., Languages, Frameworks\"\n                />\n              </div>\n              {addCategoryError && ( <p className=\"text-sm text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30 p-3 rounded-md\">{addCategoryError}</p> )}\n              <div className=\"flex justify-end gap-4 pt-2\">\n                <button type=\"button\" onClick={closeAddCategoryModal} className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 rounded-lg shadow-sm\">Cancel</button>\n                <button type=\"submit\" className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 dark:hover:bg-indigo-500 rounded-lg shadow-sm\">Add Category</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      {/* --- END ADD SKILL CATEGORY MODAL --- */}\n\n      {/* --- Edit Skill Modal (Placeholder - needs rework for category context) --- */}\n      {isEditModalOpen && currentEditingSkill && (\n        // ... This modal's JSX is still the old one for editing flat skills ...\n        // We will replace this when we work on \"Edit skill within category\"\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n         <div className=\"bg-white dark:bg-slate-800 p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">Edit Skill (Needs Rework)</h2>\n              <button onClick={closeEditSkillModal} className=\"text-gray-500 hover:text-gray-700 text-2xl\">&times;</button>\n            </div>\n            {/* Form here is still for old flat skill structure */}\n            <p className='dark:text-white'>This modal needs to be updated for editing skills within categories.</p>\n            <div className=\"flex justify-end gap-4 pt-4\">\n                <button type=\"button\" onClick={closeEditSkillModal} className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\">Close</button>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* --- End Edit Skill Modal --- */}\n    </>\n  );\n};\n\nexport default AboutPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,kBAAkB,EAAEC,gBAAgB,QAAQ,0BA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}